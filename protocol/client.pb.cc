// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: client.proto
// Protobuf C++ Version: 5.27.2

#include "client.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protocol {
namespace ncx_client {

inline constexpr ServiceConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : service_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        service_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        service_port_{0},
        server_port_{0},
        proxy_port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServiceConfig::ServiceConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServiceConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceConfigDefaultTypeInternal() {}
  union {
    ServiceConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceConfigDefaultTypeInternal _ServiceConfig_default_instance_;

inline constexpr ConfigInfoReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConfigInfoReq::ConfigInfoReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConfigInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigInfoReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigInfoReqDefaultTypeInternal() {}
  union {
    ConfigInfoReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigInfoReqDefaultTypeInternal _ConfigInfoReq_default_instance_;

inline constexpr ConfigInfoResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : service_configs_{},
        code_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConfigInfoResp::ConfigInfoResp(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConfigInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigInfoRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigInfoRespDefaultTypeInternal() {}
  union {
    ConfigInfoResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigInfoRespDefaultTypeInternal _ConfigInfoResp_default_instance_;
}  // namespace ncx_client
}  // namespace protocol
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_client_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_client_2eproto = nullptr;
const ::uint32_t
    TableStruct_client_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ConfigInfoReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ConfigInfoReq, _impl_.token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ServiceConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ServiceConfig, _impl_.service_name_),
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ServiceConfig, _impl_.service_ip_),
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ServiceConfig, _impl_.service_port_),
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ServiceConfig, _impl_.server_ip_),
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ServiceConfig, _impl_.server_port_),
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ServiceConfig, _impl_.proxy_port_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ConfigInfoResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ConfigInfoResp, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::protocol::ncx_client::ConfigInfoResp, _impl_.service_configs_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::protocol::ncx_client::ConfigInfoReq)},
        {9, -1, -1, sizeof(::protocol::ncx_client::ServiceConfig)},
        {23, -1, -1, sizeof(::protocol::ncx_client::ConfigInfoResp)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protocol::ncx_client::_ConfigInfoReq_default_instance_._instance,
    &::protocol::ncx_client::_ServiceConfig_default_instance_._instance,
    &::protocol::ncx_client::_ConfigInfoResp_default_instance_._instance,
};
const char descriptor_table_protodef_client_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014client.proto\022\023protocol.ncx_client\"\036\n\rC"
    "onfigInfoReq\022\r\n\005token\030\001 \001(\t\"\213\001\n\rServiceC"
    "onfig\022\024\n\014service_name\030\001 \001(\t\022\022\n\nservice_i"
    "p\030\002 \001(\t\022\024\n\014service_port\030\003 \001(\005\022\021\n\tserver_"
    "ip\030\004 \001(\t\022\023\n\013server_port\030\005 \001(\005\022\022\n\nproxy_p"
    "ort\030\006 \001(\005\"[\n\016ConfigInfoResp\022\014\n\004code\030\001 \001("
    "\005\022;\n\017service_configs\030\002 \003(\0132\".protocol.nc"
    "x_client.ServiceConfig2f\n\nConfigInfo\022X\n\r"
    "AskConfigInfo\022\".protocol.ncx_client.Conf"
    "igInfoReq\032#.protocol.ncx_client.ConfigIn"
    "foRespB\003Z\001.b\006proto3"
};
static ::absl::once_flag descriptor_table_client_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_client_2eproto = {
    false,
    false,
    419,
    descriptor_table_protodef_client_2eproto,
    "client.proto",
    &descriptor_table_client_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_client_2eproto::offsets,
    file_level_enum_descriptors_client_2eproto,
    file_level_service_descriptors_client_2eproto,
};
namespace protocol {
namespace ncx_client {
// ===================================================================

class ConfigInfoReq::_Internal {
 public:
};

ConfigInfoReq::ConfigInfoReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.ncx_client.ConfigInfoReq)
}
inline PROTOBUF_NDEBUG_INLINE ConfigInfoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protocol::ncx_client::ConfigInfoReq& from_msg)
      : token_(arena, from.token_),
        _cached_size_{0} {}

ConfigInfoReq::ConfigInfoReq(
    ::google::protobuf::Arena* arena,
    const ConfigInfoReq& from)
    : ::google::protobuf::Message(arena) {
  ConfigInfoReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:protocol.ncx_client.ConfigInfoReq)
}
inline PROTOBUF_NDEBUG_INLINE ConfigInfoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_(arena),
        _cached_size_{0} {}

inline void ConfigInfoReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConfigInfoReq::~ConfigInfoReq() {
  // @@protoc_insertion_point(destructor:protocol.ncx_client.ConfigInfoReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ConfigInfoReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.token_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ConfigInfoReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ConfigInfoReq, _impl_._cached_size_),
              false,
          },
          &ConfigInfoReq::MergeImpl,
          &ConfigInfoReq::kDescriptorMethods,
          &descriptor_table_client_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> ConfigInfoReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ConfigInfoReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protocol::ncx_client::ConfigInfoReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConfigInfoReq, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token = 1;
    {PROTOBUF_FIELD_OFFSET(ConfigInfoReq, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\5\0\0\0\0\0\0"
    "protocol.ncx_client.ConfigInfoReq"
    "token"
  }},
};

PROTOBUF_NOINLINE void ConfigInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ncx_client.ConfigInfoReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ConfigInfoReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ncx_client.ConfigInfoReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protocol.ncx_client.ConfigInfoReq.token");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ncx_client.ConfigInfoReq)
  return target;
}

::size_t ConfigInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ncx_client.ConfigInfoReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ConfigInfoReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConfigInfoReq*>(&to_msg);
  auto& from = static_cast<const ConfigInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.ncx_client.ConfigInfoReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigInfoReq::CopyFrom(const ConfigInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ncx_client.ConfigInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConfigInfoReq::InternalSwap(ConfigInfoReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
}

::google::protobuf::Metadata ConfigInfoReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServiceConfig::_Internal {
 public:
};

ServiceConfig::ServiceConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.ncx_client.ServiceConfig)
}
inline PROTOBUF_NDEBUG_INLINE ServiceConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protocol::ncx_client::ServiceConfig& from_msg)
      : service_name_(arena, from.service_name_),
        service_ip_(arena, from.service_ip_),
        server_ip_(arena, from.server_ip_),
        _cached_size_{0} {}

ServiceConfig::ServiceConfig(
    ::google::protobuf::Arena* arena,
    const ServiceConfig& from)
    : ::google::protobuf::Message(arena) {
  ServiceConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, service_port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, service_port_),
           offsetof(Impl_, proxy_port_) -
               offsetof(Impl_, service_port_) +
               sizeof(Impl_::proxy_port_));

  // @@protoc_insertion_point(copy_constructor:protocol.ncx_client.ServiceConfig)
}
inline PROTOBUF_NDEBUG_INLINE ServiceConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : service_name_(arena),
        service_ip_(arena),
        server_ip_(arena),
        _cached_size_{0} {}

inline void ServiceConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, service_port_),
           0,
           offsetof(Impl_, proxy_port_) -
               offsetof(Impl_, service_port_) +
               sizeof(Impl_::proxy_port_));
}
ServiceConfig::~ServiceConfig() {
  // @@protoc_insertion_point(destructor:protocol.ncx_client.ServiceConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServiceConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.service_ip_.Destroy();
  _impl_.server_ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ServiceConfig::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_._cached_size_),
              false,
          },
          &ServiceConfig::MergeImpl,
          &ServiceConfig::kDescriptorMethods,
          &descriptor_table_client_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 73, 2> ServiceConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ServiceConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protocol::ncx_client::ServiceConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string service_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.service_name_)}},
    // string service_ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.service_ip_)}},
    // int32 service_port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServiceConfig, _impl_.service_port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.service_port_)}},
    // string server_ip = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.server_ip_)}},
    // int32 server_port = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServiceConfig, _impl_.server_port_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.server_port_)}},
    // int32 proxy_port = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServiceConfig, _impl_.proxy_port_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.proxy_port_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string service_name = 1;
    {PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.service_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string service_ip = 2;
    {PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.service_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 service_port = 3;
    {PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.service_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string server_ip = 4;
    {PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.server_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 server_port = 5;
    {PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.server_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 proxy_port = 6;
    {PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.proxy_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\41\14\12\0\11\0\0\0"
    "protocol.ncx_client.ServiceConfig"
    "service_name"
    "service_ip"
    "server_ip"
  }},
};

PROTOBUF_NOINLINE void ServiceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ncx_client.ServiceConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.service_ip_.ClearToEmpty();
  _impl_.server_ip_.ClearToEmpty();
  ::memset(&_impl_.service_port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.proxy_port_) -
      reinterpret_cast<char*>(&_impl_.service_port_)) + sizeof(_impl_.proxy_port_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ServiceConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ncx_client.ServiceConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    const std::string& _s = this->_internal_service_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protocol.ncx_client.ServiceConfig.service_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string service_ip = 2;
  if (!this->_internal_service_ip().empty()) {
    const std::string& _s = this->_internal_service_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protocol.ncx_client.ServiceConfig.service_ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 service_port = 3;
  if (this->_internal_service_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_service_port(), target);
  }

  // string server_ip = 4;
  if (!this->_internal_server_ip().empty()) {
    const std::string& _s = this->_internal_server_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protocol.ncx_client.ServiceConfig.server_ip");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 server_port = 5;
  if (this->_internal_server_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_server_port(), target);
  }

  // int32 proxy_port = 6;
  if (this->_internal_proxy_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_proxy_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ncx_client.ServiceConfig)
  return target;
}

::size_t ServiceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ncx_client.ServiceConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_service_name());
  }

  // string service_ip = 2;
  if (!this->_internal_service_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_service_ip());
  }

  // string server_ip = 4;
  if (!this->_internal_server_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_server_ip());
  }

  // int32 service_port = 3;
  if (this->_internal_service_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_service_port());
  }

  // int32 server_port = 5;
  if (this->_internal_server_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_server_port());
  }

  // int32 proxy_port = 6;
  if (this->_internal_proxy_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_proxy_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ServiceConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServiceConfig*>(&to_msg);
  auto& from = static_cast<const ServiceConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.ncx_client.ServiceConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_service_ip().empty()) {
    _this->_internal_set_service_ip(from._internal_service_ip());
  }
  if (!from._internal_server_ip().empty()) {
    _this->_internal_set_server_ip(from._internal_server_ip());
  }
  if (from._internal_service_port() != 0) {
    _this->_impl_.service_port_ = from._impl_.service_port_;
  }
  if (from._internal_server_port() != 0) {
    _this->_impl_.server_port_ = from._impl_.server_port_;
  }
  if (from._internal_proxy_port() != 0) {
    _this->_impl_.proxy_port_ = from._impl_.proxy_port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceConfig::CopyFrom(const ServiceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ncx_client.ServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServiceConfig::InternalSwap(ServiceConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_name_, &other->_impl_.service_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_ip_, &other->_impl_.service_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_ip_, &other->_impl_.server_ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.proxy_port_)
      + sizeof(ServiceConfig::_impl_.proxy_port_)
      - PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.service_port_)>(
          reinterpret_cast<char*>(&_impl_.service_port_),
          reinterpret_cast<char*>(&other->_impl_.service_port_));
}

::google::protobuf::Metadata ServiceConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConfigInfoResp::_Internal {
 public:
};

ConfigInfoResp::ConfigInfoResp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.ncx_client.ConfigInfoResp)
}
inline PROTOBUF_NDEBUG_INLINE ConfigInfoResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protocol::ncx_client::ConfigInfoResp& from_msg)
      : service_configs_{visibility, arena, from.service_configs_},
        _cached_size_{0} {}

ConfigInfoResp::ConfigInfoResp(
    ::google::protobuf::Arena* arena,
    const ConfigInfoResp& from)
    : ::google::protobuf::Message(arena) {
  ConfigInfoResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.code_ = from._impl_.code_;

  // @@protoc_insertion_point(copy_constructor:protocol.ncx_client.ConfigInfoResp)
}
inline PROTOBUF_NDEBUG_INLINE ConfigInfoResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : service_configs_{visibility, arena},
        _cached_size_{0} {}

inline void ConfigInfoResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_ = {};
}
ConfigInfoResp::~ConfigInfoResp() {
  // @@protoc_insertion_point(destructor:protocol.ncx_client.ConfigInfoResp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ConfigInfoResp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ConfigInfoResp::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ConfigInfoResp, _impl_._cached_size_),
              false,
          },
          &ConfigInfoResp::MergeImpl,
          &ConfigInfoResp::kDescriptorMethods,
          &descriptor_table_client_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ConfigInfoResp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ConfigInfoResp_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protocol::ncx_client::ConfigInfoResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .protocol.ncx_client.ServiceConfig service_configs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConfigInfoResp, _impl_.service_configs_)}},
    // int32 code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConfigInfoResp, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ConfigInfoResp, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 code = 1;
    {PROTOBUF_FIELD_OFFSET(ConfigInfoResp, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .protocol.ncx_client.ServiceConfig service_configs = 2;
    {PROTOBUF_FIELD_OFFSET(ConfigInfoResp, _impl_.service_configs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protocol::ncx_client::ServiceConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ConfigInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ncx_client.ConfigInfoResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_configs_.Clear();
  _impl_.code_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ConfigInfoResp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ncx_client.ConfigInfoResp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_code(), target);
  }

  // repeated .protocol.ncx_client.ServiceConfig service_configs = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_service_configs_size());
       i < n; i++) {
    const auto& repfield = this->_internal_service_configs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ncx_client.ConfigInfoResp)
  return target;
}

::size_t ConfigInfoResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ncx_client.ConfigInfoResp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .protocol.ncx_client.ServiceConfig service_configs = 2;
  total_size += 1UL * this->_internal_service_configs_size();
  for (const auto& msg : this->_internal_service_configs()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ConfigInfoResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConfigInfoResp*>(&to_msg);
  auto& from = static_cast<const ConfigInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.ncx_client.ConfigInfoResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_service_configs()->MergeFrom(
      from._internal_service_configs());
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigInfoResp::CopyFrom(const ConfigInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ncx_client.ConfigInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConfigInfoResp::InternalSwap(ConfigInfoResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.service_configs_.InternalSwap(&other->_impl_.service_configs_);
        swap(_impl_.code_, other->_impl_.code_);
}

::google::protobuf::Metadata ConfigInfoResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ncx_client
}  // namespace protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_client_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
