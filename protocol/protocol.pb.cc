// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protocol.proto
// Protobuf C++ Version: 5.27.2

#include "protocol.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protocol {

inline constexpr MessageHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_length_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MessageHeader::MessageHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageHeaderDefaultTypeInternal() {}
  union {
    MessageHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageHeaderDefaultTypeInternal _MessageHeader_default_instance_;

inline constexpr Hello_Control_Channel_Hello_Content::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        service_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proxy_port_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hello_Control_Channel_Hello_Content::Hello_Control_Channel_Hello_Content(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Hello_Control_Channel_Hello_ContentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Hello_Control_Channel_Hello_ContentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Hello_Control_Channel_Hello_ContentDefaultTypeInternal() {}
  union {
    Hello_Control_Channel_Hello_Content _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Hello_Control_Channel_Hello_ContentDefaultTypeInternal _Hello_Control_Channel_Hello_Content_default_instance_;

inline constexpr DataChannelCmd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_channel_cmd_{static_cast< ::protocol::DataChannelCmd_DCmd >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DataChannelCmd::DataChannelCmd(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataChannelCmdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataChannelCmdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataChannelCmdDefaultTypeInternal() {}
  union {
    DataChannelCmd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataChannelCmdDefaultTypeInternal _DataChannelCmd_default_instance_;

inline constexpr ControlChannelCmd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        control_channel_cmd_{static_cast< ::protocol::ControlChannelCmd_CCmd >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ControlChannelCmd::ControlChannelCmd(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControlChannelCmdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlChannelCmdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlChannelCmdDefaultTypeInternal() {}
  union {
    ControlChannelCmd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlChannelCmdDefaultTypeInternal _ControlChannelCmd_default_instance_;

inline constexpr Ack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ack_content_{static_cast< ::protocol::Ack_AckContent >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Ack::Ack(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AckDefaultTypeInternal() {}
  union {
    Ack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AckDefaultTypeInternal _Ack_default_instance_;

inline constexpr Hello::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        digest_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        control_channel_hello_content_{nullptr},
        hello_type_{static_cast< ::protocol::Hello_HelloType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Hello::Hello(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HelloDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloDefaultTypeInternal() {}
  union {
    Hello _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloDefaultTypeInternal _Hello_default_instance_;
}  // namespace protocol
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_protocol_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protocol_2eproto = nullptr;
const ::uint32_t
    TableStruct_protocol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protocol::MessageHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protocol::MessageHeader, _impl_.message_length_),
        PROTOBUF_FIELD_OFFSET(::protocol::Hello_Control_Channel_Hello_Content, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protocol::Hello_Control_Channel_Hello_Content, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protocol::Hello_Control_Channel_Hello_Content, _impl_.service_name_),
        PROTOBUF_FIELD_OFFSET(::protocol::Hello_Control_Channel_Hello_Content, _impl_.proxy_port_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::protocol::Hello, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protocol::Hello, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protocol::Hello, _impl_.hello_type_),
        PROTOBUF_FIELD_OFFSET(::protocol::Hello, _impl_.digest_),
        PROTOBUF_FIELD_OFFSET(::protocol::Hello, _impl_.control_channel_hello_content_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::protocol::Ack, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protocol::Ack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protocol::Ack, _impl_.ack_content_),
        0,
        PROTOBUF_FIELD_OFFSET(::protocol::ControlChannelCmd, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protocol::ControlChannelCmd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protocol::ControlChannelCmd, _impl_.control_channel_cmd_),
        0,
        PROTOBUF_FIELD_OFFSET(::protocol::DataChannelCmd, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protocol::DataChannelCmd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protocol::DataChannelCmd, _impl_.data_channel_cmd_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::protocol::MessageHeader)},
        {9, 19, -1, sizeof(::protocol::Hello_Control_Channel_Hello_Content)},
        {21, 32, -1, sizeof(::protocol::Hello)},
        {35, 44, -1, sizeof(::protocol::Ack)},
        {45, 54, -1, sizeof(::protocol::ControlChannelCmd)},
        {55, 64, -1, sizeof(::protocol::DataChannelCmd)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protocol::_MessageHeader_default_instance_._instance,
    &::protocol::_Hello_Control_Channel_Hello_Content_default_instance_._instance,
    &::protocol::_Hello_default_instance_._instance,
    &::protocol::_Ack_default_instance_._instance,
    &::protocol::_ControlChannelCmd_default_instance_._instance,
    &::protocol::_DataChannelCmd_default_instance_._instance,
};
const char descriptor_table_protodef_protocol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016protocol.proto\022\010protocol\"\'\n\rMessageHea"
    "der\022\026\n\016message_length\030\001 \001(\007\"\234\003\n\005Hello\0222\n"
    "\nhello_type\030\001 \001(\0162\031.protocol.Hello.Hello"
    "TypeH\000\210\001\001\022\023\n\006digest\030\002 \001(\tH\001\210\001\001\022Y\n\035contro"
    "l_channel_hello_content\030\003 \001(\0132-.protocol"
    ".Hello.Control_Channel_Hello_ContentH\002\210\001"
    "\001\032s\n\035Control_Channel_Hello_Content\022\031\n\014se"
    "rvice_name\030\001 \001(\tH\000\210\001\001\022\027\n\nproxy_port\030\002 \001("
    "\005H\001\210\001\001B\017\n\r_service_nameB\r\n\013_proxy_port\">"
    "\n\tHelloType\022\031\n\025CONTROL_CHANNEL_HELLO\020\000\022\026"
    "\n\022DATA_CHANNEL_HELLO\020\001B\r\n\013_hello_typeB\t\n"
    "\007_digestB \n\036_control_channel_hello_conte"
    "nt\"o\n\003Ack\0222\n\013ack_content\030\001 \001(\0162\030.protoco"
    "l.Ack.AckContentH\000\210\001\001\"$\n\nAckContent\022\006\n\002O"
    "K\020\000\022\016\n\nAUTH_ERROR\020\001B\016\n\014_ack_content\"\237\001\n\021"
    "ControlChannelCmd\022B\n\023control_channel_cmd"
    "\030\001 \001(\0162 .protocol.ControlChannelCmd.CCmd"
    "H\000\210\001\001\".\n\004CCmd\022\027\n\023CREATE_DATA_CHANNEL\020\000\022\r"
    "\n\tHEARTBEAT\020\001B\026\n\024_control_channel_cmd\"\231\001"
    "\n\016DataChannelCmd\022<\n\020data_channel_cmd\030\001 \001"
    "(\0162\035.protocol.DataChannelCmd.DCmdH\000\210\001\001\"4"
    "\n\004DCmd\022\025\n\021START_FORWARD_TCP\020\000\022\025\n\021START_F"
    "ORWARD_UDP\020\001B\023\n\021_data_channel_cmdb\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_protocol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_protocol_2eproto = {
    false,
    false,
    921,
    descriptor_table_protodef_protocol_2eproto,
    "protocol.proto",
    &descriptor_table_protocol_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_protocol_2eproto::offsets,
    file_level_enum_descriptors_protocol_2eproto,
    file_level_service_descriptors_protocol_2eproto,
};
namespace protocol {
const ::google::protobuf::EnumDescriptor* Hello_HelloType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protocol_2eproto);
  return file_level_enum_descriptors_protocol_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Hello_HelloType_internal_data_[] = {
    131072u, 0u, };
bool Hello_HelloType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Hello_HelloType Hello::CONTROL_CHANNEL_HELLO;
constexpr Hello_HelloType Hello::DATA_CHANNEL_HELLO;
constexpr Hello_HelloType Hello::HelloType_MIN;
constexpr Hello_HelloType Hello::HelloType_MAX;
constexpr int Hello::HelloType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Ack_AckContent_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protocol_2eproto);
  return file_level_enum_descriptors_protocol_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Ack_AckContent_internal_data_[] = {
    131072u, 0u, };
bool Ack_AckContent_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Ack_AckContent Ack::OK;
constexpr Ack_AckContent Ack::AUTH_ERROR;
constexpr Ack_AckContent Ack::AckContent_MIN;
constexpr Ack_AckContent Ack::AckContent_MAX;
constexpr int Ack::AckContent_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ControlChannelCmd_CCmd_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protocol_2eproto);
  return file_level_enum_descriptors_protocol_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ControlChannelCmd_CCmd_internal_data_[] = {
    131072u, 0u, };
bool ControlChannelCmd_CCmd_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ControlChannelCmd_CCmd ControlChannelCmd::CREATE_DATA_CHANNEL;
constexpr ControlChannelCmd_CCmd ControlChannelCmd::HEARTBEAT;
constexpr ControlChannelCmd_CCmd ControlChannelCmd::CCmd_MIN;
constexpr ControlChannelCmd_CCmd ControlChannelCmd::CCmd_MAX;
constexpr int ControlChannelCmd::CCmd_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* DataChannelCmd_DCmd_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protocol_2eproto);
  return file_level_enum_descriptors_protocol_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t DataChannelCmd_DCmd_internal_data_[] = {
    131072u, 0u, };
bool DataChannelCmd_DCmd_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr DataChannelCmd_DCmd DataChannelCmd::START_FORWARD_TCP;
constexpr DataChannelCmd_DCmd DataChannelCmd::START_FORWARD_UDP;
constexpr DataChannelCmd_DCmd DataChannelCmd::DCmd_MIN;
constexpr DataChannelCmd_DCmd DataChannelCmd::DCmd_MAX;
constexpr int DataChannelCmd::DCmd_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class MessageHeader::_Internal {
 public:
};

MessageHeader::MessageHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.MessageHeader)
}
MessageHeader::MessageHeader(
    ::google::protobuf::Arena* arena, const MessageHeader& from)
    : MessageHeader(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MessageHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MessageHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.message_length_ = {};
}
MessageHeader::~MessageHeader() {
  // @@protoc_insertion_point(destructor:protocol.MessageHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MessageHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MessageHeader::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_._cached_size_),
              false,
          },
          &MessageHeader::MergeImpl,
          &MessageHeader::kDescriptorMethods,
          &descriptor_table_protocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MessageHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MessageHeader_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protocol::MessageHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // fixed32 message_length = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.message_length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // fixed32 message_length = 1;
    {PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.message_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MessageHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MessageHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_length_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MessageHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MessageHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // fixed32 message_length = 1;
  if (this->_internal_message_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this->_internal_message_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MessageHeader)
  return target;
}

::size_t MessageHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MessageHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // fixed32 message_length = 1;
  if (this->_internal_message_length() != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MessageHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageHeader*>(&to_msg);
  auto& from = static_cast<const MessageHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.MessageHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_length() != 0) {
    _this->_impl_.message_length_ = from._impl_.message_length_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageHeader::CopyFrom(const MessageHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageHeader::InternalSwap(MessageHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.message_length_, other->_impl_.message_length_);
}

::google::protobuf::Metadata MessageHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Hello_Control_Channel_Hello_Content::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Hello_Control_Channel_Hello_Content>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Hello_Control_Channel_Hello_Content, _impl_._has_bits_);
};

Hello_Control_Channel_Hello_Content::Hello_Control_Channel_Hello_Content(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.Hello.Control_Channel_Hello_Content)
}
inline PROTOBUF_NDEBUG_INLINE Hello_Control_Channel_Hello_Content::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protocol::Hello_Control_Channel_Hello_Content& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        service_name_(arena, from.service_name_) {}

Hello_Control_Channel_Hello_Content::Hello_Control_Channel_Hello_Content(
    ::google::protobuf::Arena* arena,
    const Hello_Control_Channel_Hello_Content& from)
    : ::google::protobuf::Message(arena) {
  Hello_Control_Channel_Hello_Content* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.proxy_port_ = from._impl_.proxy_port_;

  // @@protoc_insertion_point(copy_constructor:protocol.Hello.Control_Channel_Hello_Content)
}
inline PROTOBUF_NDEBUG_INLINE Hello_Control_Channel_Hello_Content::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        service_name_(arena) {}

inline void Hello_Control_Channel_Hello_Content::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proxy_port_ = {};
}
Hello_Control_Channel_Hello_Content::~Hello_Control_Channel_Hello_Content() {
  // @@protoc_insertion_point(destructor:protocol.Hello.Control_Channel_Hello_Content)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Hello_Control_Channel_Hello_Content::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hello_Control_Channel_Hello_Content::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Hello_Control_Channel_Hello_Content, _impl_._cached_size_),
              false,
          },
          &Hello_Control_Channel_Hello_Content::MergeImpl,
          &Hello_Control_Channel_Hello_Content::kDescriptorMethods,
          &descriptor_table_protocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> Hello_Control_Channel_Hello_Content::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Hello_Control_Channel_Hello_Content, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Hello_Control_Channel_Hello_Content_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protocol::Hello_Control_Channel_Hello_Content>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 proxy_port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Hello_Control_Channel_Hello_Content, _impl_.proxy_port_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Hello_Control_Channel_Hello_Content, _impl_.proxy_port_)}},
    // optional string service_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Hello_Control_Channel_Hello_Content, _impl_.service_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string service_name = 1;
    {PROTOBUF_FIELD_OFFSET(Hello_Control_Channel_Hello_Content, _impl_.service_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 proxy_port = 2;
    {PROTOBUF_FIELD_OFFSET(Hello_Control_Channel_Hello_Content, _impl_.proxy_port_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\54\14\0\0\0\0\0\0"
    "protocol.Hello.Control_Channel_Hello_Content"
    "service_name"
  }},
};

PROTOBUF_NOINLINE void Hello_Control_Channel_Hello_Content::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Hello.Control_Channel_Hello_Content)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.service_name_.ClearNonDefaultToEmpty();
  }
  _impl_.proxy_port_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Hello_Control_Channel_Hello_Content::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Hello.Control_Channel_Hello_Content)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string service_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_service_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protocol.Hello.Control_Channel_Hello_Content.service_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 proxy_port = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_proxy_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Hello.Control_Channel_Hello_Content)
  return target;
}

::size_t Hello_Control_Channel_Hello_Content::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Hello.Control_Channel_Hello_Content)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string service_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_service_name());
    }

    // optional int32 proxy_port = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_proxy_port());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Hello_Control_Channel_Hello_Content::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Hello_Control_Channel_Hello_Content*>(&to_msg);
  auto& from = static_cast<const Hello_Control_Channel_Hello_Content&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.Hello.Control_Channel_Hello_Content)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_service_name(from._internal_service_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.proxy_port_ = from._impl_.proxy_port_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Hello_Control_Channel_Hello_Content::CopyFrom(const Hello_Control_Channel_Hello_Content& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Hello.Control_Channel_Hello_Content)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Hello_Control_Channel_Hello_Content::InternalSwap(Hello_Control_Channel_Hello_Content* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_name_, &other->_impl_.service_name_, arena);
        swap(_impl_.proxy_port_, other->_impl_.proxy_port_);
}

::google::protobuf::Metadata Hello_Control_Channel_Hello_Content::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Hello::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Hello>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Hello, _impl_._has_bits_);
};

Hello::Hello(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.Hello)
}
inline PROTOBUF_NDEBUG_INLINE Hello::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protocol::Hello& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        digest_(arena, from.digest_) {}

Hello::Hello(
    ::google::protobuf::Arena* arena,
    const Hello& from)
    : ::google::protobuf::Message(arena) {
  Hello* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.control_channel_hello_content_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::protocol::Hello_Control_Channel_Hello_Content>(
                              arena, *from._impl_.control_channel_hello_content_)
                        : nullptr;
  _impl_.hello_type_ = from._impl_.hello_type_;

  // @@protoc_insertion_point(copy_constructor:protocol.Hello)
}
inline PROTOBUF_NDEBUG_INLINE Hello::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        digest_(arena) {}

inline void Hello::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, control_channel_hello_content_),
           0,
           offsetof(Impl_, hello_type_) -
               offsetof(Impl_, control_channel_hello_content_) +
               sizeof(Impl_::hello_type_));
}
Hello::~Hello() {
  // @@protoc_insertion_point(destructor:protocol.Hello)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Hello::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.digest_.Destroy();
  delete _impl_.control_channel_hello_content_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hello::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Hello, _impl_._cached_size_),
              false,
          },
          &Hello::MergeImpl,
          &Hello::kDescriptorMethods,
          &descriptor_table_protocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 29, 2> Hello::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Hello, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Hello_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protocol::Hello>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protocol.Hello.HelloType hello_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Hello, _impl_.hello_type_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Hello, _impl_.hello_type_)}},
    // optional string digest = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Hello, _impl_.digest_)}},
    // optional .protocol.Hello.Control_Channel_Hello_Content control_channel_hello_content = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Hello, _impl_.control_channel_hello_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protocol.Hello.HelloType hello_type = 1;
    {PROTOBUF_FIELD_OFFSET(Hello, _impl_.hello_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string digest = 2;
    {PROTOBUF_FIELD_OFFSET(Hello, _impl_.digest_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .protocol.Hello.Control_Channel_Hello_Content control_channel_hello_content = 3;
    {PROTOBUF_FIELD_OFFSET(Hello, _impl_.control_channel_hello_content_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protocol::Hello_Control_Channel_Hello_Content>()},
  }}, {{
    "\16\0\6\0\0\0\0\0"
    "protocol.Hello"
    "digest"
  }},
};

PROTOBUF_NOINLINE void Hello::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Hello)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.digest_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.control_channel_hello_content_ != nullptr);
      _impl_.control_channel_hello_content_->Clear();
    }
  }
  _impl_.hello_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Hello::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Hello)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protocol.Hello.HelloType hello_type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_hello_type(), target);
  }

  // optional string digest = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_digest();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protocol.Hello.digest");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .protocol.Hello.Control_Channel_Hello_Content control_channel_hello_content = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.control_channel_hello_content_, _impl_.control_channel_hello_content_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Hello)
  return target;
}

::size_t Hello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Hello)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string digest = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_digest());
    }

    // optional .protocol.Hello.Control_Channel_Hello_Content control_channel_hello_content = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.control_channel_hello_content_);
    }

    // optional .protocol.Hello.HelloType hello_type = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_hello_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Hello::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Hello*>(&to_msg);
  auto& from = static_cast<const Hello&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.Hello)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_digest(from._internal_digest());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.control_channel_hello_content_ != nullptr);
      if (_this->_impl_.control_channel_hello_content_ == nullptr) {
        _this->_impl_.control_channel_hello_content_ =
            ::google::protobuf::Message::CopyConstruct<::protocol::Hello_Control_Channel_Hello_Content>(arena, *from._impl_.control_channel_hello_content_);
      } else {
        _this->_impl_.control_channel_hello_content_->MergeFrom(*from._impl_.control_channel_hello_content_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.hello_type_ = from._impl_.hello_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Hello::CopyFrom(const Hello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Hello::InternalSwap(Hello* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.digest_, &other->_impl_.digest_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Hello, _impl_.hello_type_)
      + sizeof(Hello::_impl_.hello_type_)
      - PROTOBUF_FIELD_OFFSET(Hello, _impl_.control_channel_hello_content_)>(
          reinterpret_cast<char*>(&_impl_.control_channel_hello_content_),
          reinterpret_cast<char*>(&other->_impl_.control_channel_hello_content_));
}

::google::protobuf::Metadata Hello::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Ack::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Ack>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Ack, _impl_._has_bits_);
};

Ack::Ack(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.Ack)
}
Ack::Ack(
    ::google::protobuf::Arena* arena, const Ack& from)
    : Ack(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Ack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Ack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ack_content_ = {};
}
Ack::~Ack() {
  // @@protoc_insertion_point(destructor:protocol.Ack)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Ack::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Ack::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Ack, _impl_._cached_size_),
              false,
          },
          &Ack::MergeImpl,
          &Ack::kDescriptorMethods,
          &descriptor_table_protocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Ack::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Ack, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Ack_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protocol::Ack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .protocol.Ack.AckContent ack_content = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Ack, _impl_.ack_content_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Ack, _impl_.ack_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protocol.Ack.AckContent ack_content = 1;
    {PROTOBUF_FIELD_OFFSET(Ack, _impl_.ack_content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Ack::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Ack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ack_content_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Ack::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Ack)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protocol.Ack.AckContent ack_content = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_ack_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Ack)
  return target;
}

::size_t Ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Ack)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protocol.Ack.AckContent ack_content = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_ack_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Ack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Ack*>(&to_msg);
  auto& from = static_cast<const Ack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.Ack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.ack_content_ = from._impl_.ack_content_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ack::CopyFrom(const Ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Ack::InternalSwap(Ack* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ack_content_, other->_impl_.ack_content_);
}

::google::protobuf::Metadata Ack::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ControlChannelCmd::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ControlChannelCmd>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ControlChannelCmd, _impl_._has_bits_);
};

ControlChannelCmd::ControlChannelCmd(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.ControlChannelCmd)
}
ControlChannelCmd::ControlChannelCmd(
    ::google::protobuf::Arena* arena, const ControlChannelCmd& from)
    : ControlChannelCmd(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ControlChannelCmd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ControlChannelCmd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.control_channel_cmd_ = {};
}
ControlChannelCmd::~ControlChannelCmd() {
  // @@protoc_insertion_point(destructor:protocol.ControlChannelCmd)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControlChannelCmd::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ControlChannelCmd::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ControlChannelCmd, _impl_._cached_size_),
              false,
          },
          &ControlChannelCmd::MergeImpl,
          &ControlChannelCmd::kDescriptorMethods,
          &descriptor_table_protocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ControlChannelCmd::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ControlChannelCmd, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ControlChannelCmd_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protocol::ControlChannelCmd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .protocol.ControlChannelCmd.CCmd control_channel_cmd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlChannelCmd, _impl_.control_channel_cmd_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ControlChannelCmd, _impl_.control_channel_cmd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protocol.ControlChannelCmd.CCmd control_channel_cmd = 1;
    {PROTOBUF_FIELD_OFFSET(ControlChannelCmd, _impl_.control_channel_cmd_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ControlChannelCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ControlChannelCmd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.control_channel_cmd_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ControlChannelCmd::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ControlChannelCmd)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protocol.ControlChannelCmd.CCmd control_channel_cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_control_channel_cmd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ControlChannelCmd)
  return target;
}

::size_t ControlChannelCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ControlChannelCmd)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protocol.ControlChannelCmd.CCmd control_channel_cmd = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_control_channel_cmd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ControlChannelCmd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ControlChannelCmd*>(&to_msg);
  auto& from = static_cast<const ControlChannelCmd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.ControlChannelCmd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.control_channel_cmd_ = from._impl_.control_channel_cmd_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControlChannelCmd::CopyFrom(const ControlChannelCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ControlChannelCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ControlChannelCmd::InternalSwap(ControlChannelCmd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.control_channel_cmd_, other->_impl_.control_channel_cmd_);
}

::google::protobuf::Metadata ControlChannelCmd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DataChannelCmd::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DataChannelCmd>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DataChannelCmd, _impl_._has_bits_);
};

DataChannelCmd::DataChannelCmd(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.DataChannelCmd)
}
DataChannelCmd::DataChannelCmd(
    ::google::protobuf::Arena* arena, const DataChannelCmd& from)
    : DataChannelCmd(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DataChannelCmd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DataChannelCmd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.data_channel_cmd_ = {};
}
DataChannelCmd::~DataChannelCmd() {
  // @@protoc_insertion_point(destructor:protocol.DataChannelCmd)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataChannelCmd::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DataChannelCmd::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(DataChannelCmd, _impl_._cached_size_),
              false,
          },
          &DataChannelCmd::MergeImpl,
          &DataChannelCmd::kDescriptorMethods,
          &descriptor_table_protocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DataChannelCmd::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataChannelCmd, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataChannelCmd_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protocol::DataChannelCmd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .protocol.DataChannelCmd.DCmd data_channel_cmd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataChannelCmd, _impl_.data_channel_cmd_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(DataChannelCmd, _impl_.data_channel_cmd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protocol.DataChannelCmd.DCmd data_channel_cmd = 1;
    {PROTOBUF_FIELD_OFFSET(DataChannelCmd, _impl_.data_channel_cmd_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DataChannelCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.DataChannelCmd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_channel_cmd_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DataChannelCmd::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.DataChannelCmd)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protocol.DataChannelCmd.DCmd data_channel_cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_data_channel_cmd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.DataChannelCmd)
  return target;
}

::size_t DataChannelCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.DataChannelCmd)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protocol.DataChannelCmd.DCmd data_channel_cmd = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_data_channel_cmd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DataChannelCmd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DataChannelCmd*>(&to_msg);
  auto& from = static_cast<const DataChannelCmd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.DataChannelCmd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.data_channel_cmd_ = from._impl_.data_channel_cmd_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataChannelCmd::CopyFrom(const DataChannelCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.DataChannelCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DataChannelCmd::InternalSwap(DataChannelCmd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.data_channel_cmd_, other->_impl_.data_channel_cmd_);
}

::google::protobuf::Metadata DataChannelCmd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_protocol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
